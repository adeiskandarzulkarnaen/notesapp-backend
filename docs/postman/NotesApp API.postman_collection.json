{
	"info": {
		"_postman_id": "412d06d8-c0aa-4a49-96cb-da845617f952",
		"name": "NotesApp API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23541232"
	},
	"item": [
		{
			"name": "Authentications",
			"item": [
				{
					"name": "Auth Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('add accessToken and refreshToken to environment', () => {",
									"    const responseJson = pm.response.json();",
									"    const { data } = responseJson;",
									" ",
									"    pm.expect(data).to.have.ownProperty('accessToken');",
									"    pm.expect(data).to.have.ownProperty('refreshToken');",
									" ",
									"    // menyimpan accessToken dan refreshToken di environment variable",
									"    pm.environment.set('accessToken', data.accessToken);",
									"    pm.environment.set('refreshToken', data.refreshToken);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"2006043\",\r\n    \"password\": \"hilapdeui\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/authentications",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"authentications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/authentications",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"authentications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth Rennew Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response body data should have property accessToken with correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    const { data } = responseJson;\r",
									" \r",
									"    pm.expect(data).to.have.ownProperty('accessToken');\r",
									"    pm.expect(data.accessToken).to.not.equals('');\r",
									"    pm.expect(data.accessToken).to.not.equals(null);\r",
									" \r",
									"    // menyimpan accessToken dan refreshToken di environment variable\r",
									"    pm.environment.set('accessToken', data.accessToken);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/authentications",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"authentications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response body data should have userId property', () => {",
									"    const responseJson = pm.response.json();",
									"    const { data } = responseJson;",
									" ",
									"    pm.expect(data).to.ownProperty('userId');",
									"    pm.environment.set('currentUserId', data.userId);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"2006043\",\r\n    \"password\": \"hilapdeui\",\r\n    \"fullname\": \"Ade Iskandar Zulkarnaen\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/users",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Username",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/users",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "2006044",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by userId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/users/{{currentUserId}}",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{currentUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add User image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"type": "file",
									"src": "/Users/zulkarnaen/Pictures/archieve/aderedbg.jpeg"
								}
							]
						},
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/users",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Image",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/users/{{currentUserId}}/image",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{currentUserId}}",
								"image"
							]
						}
					},
					"response": []
				},
				{
					"name": "[disable] Get User File",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/users/image/{{filename}}",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"image",
								"{{filename}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notes",
			"item": [
				{
					"name": "Adding Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response body data should have noteId property and not equal to empty', () => {",
									"    const responseJson = pm.response.json();",
									"    const { data } = responseJson;",
									" ",
									"    pm.expect(data).to.ownProperty('noteId');",
									"    pm.expect(data.noteId).to.not.equals('');",
									" ",
									"    pm.environment.set('noteId', data.noteId);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"title\": \"Tugas 2 Machine Learning\",\r\n   \"tags\": [\"Computer Science\", \"Convolutional Neural Network\"],\r\n   \"body\": \"Membuat model clasifikasi gambar, deadline tugas sampai 30 Maret 2024\"\r\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/notes",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting All Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/notes",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Getting Specified Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/notes/{{noteId}}",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"notes",
								"{{noteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Catatan A Revised\",\r\n    \"tags\": [\"Android\", \"Web\"],\r\n    \"body\": \"Isi dari Catatan A Revised\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/notes/{{noteId}}",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"notes",
								"{{noteId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/notes/{{noteId}}",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"notes",
								"{{noteId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Collaborations",
			"item": [
				{
					"name": "Add Collaborations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"noteId\": \"{{ownerNoteId}}\",\r\n    \"userId\": \"{{collaboratorUserId}}\"\r\n}   ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/collaborations",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"collaborations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Collaborations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('response status code should have 200 value', () => {\r",
									"   pm.response.to.have.status(200);\r",
									"}); \r",
									" \r",
									"pm.test('response Content-Type header should have application/json value', () => {\r",
									"  pm.expect(pm.response.headers.get('Content-Type')).to.equals('application/json; charset=utf-8');\r",
									"});\r",
									" \r",
									"pm.test('response body data should contains correct value', () => {\r",
									"    const responseJson = pm.response.json();\r",
									" \r",
									"    pm.expect(responseJson).to.be.an('object');\r",
									"    pm.expect(responseJson).to.have.ownProperty('status');\r",
									"    pm.expect(responseJson.status).to.equals('success');\r",
									"    pm.expect(responseJson).to.have.ownProperty('message');\r",
									"    pm.expect(responseJson.message).to.equals('Kolaborasi berhasil dihapus');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"noteId\": \"{{ownerNoteId}}\",\r\n    \"userId\": \"{{collaboratorUserId}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protokol}}://{{host}}:{{port}}/collaborations",
							"protocol": "{{protokol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"collaborations"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}